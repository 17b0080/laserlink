// $google-fonts-url: 'https://fonts.googleapis.com/css?family=Exo:300,400,600,700,800,900&subset=latin-ext';

// ==========================================================================
// If YOU NEED YOUR CUSTOM FONT - use @font-fase. Uncomment from line 17
// ==========================================================================
// $typefaces - {map}
// @family - {string}
// @weight - {integer} or {keyword} i.e. 800, bold
// @style - {keyword} i.e. normal, italic
// @sourse - https://github.com/minamarkham/sassy-starter/blob/master/src/scss/utilities/_fonts.scss
// @usage:

$typefaces: (
  'CocogooseClassic-Light': (
    family: 'Cocogoose Classic',
    weight: 300,
    style: normal
  ),
  'CocogooseClassic-Regular': (
    family: 'CocogooseClassic',
    weight: 400,
    style: normal
  )
);

@if variable-exists(google-fonts-url) {
  @import url($google-fonts-url);
}

@if variable-exists(typefaces) {
  @each $file, $option in $typefaces {
    /*
    file='futuraPT', option=family='Futura PT'
    file='futuraPT', option=weight='Book'
    file='futuraPT', option=style=normal
    */
    @font-face {
      font-weight: map-get(map-get($typefaces, $file), weight);

      /*
      1. map-get($typefaces, $file) --> 'Futura PT' : (...)
      Получение элемента &file ('Futura PT') из объекта-переменной &typefaces, к параметрам которого можно обратиться
      2. map-get('Futura PT' : (...), weight) --> 'Book'
      Получение значения параметра weight из элемента 'Futura Pt': (...).
      */
      font-family: map-get(map-get($typefaces, $file), family);
      font-style: map-get(map-get($typefaces, $file), style);
      src:
        url('../fonts/#{$file}.ttf') format('truetype'),
        url('../fonts/#{$file}.woff') format('woff'),
        url('../fonts/#{$file}.woff2') format('woff2');
    }
  }
}
